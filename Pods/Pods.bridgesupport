<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<opaque name='JKParseState' type='^{JKParseState=}'/>
<constant name='AFNetworkingErrorDomain' type='@'/>
<constant name='AFNetworkingOperationDidFinishNotification' type='@'/>
<constant name='AFNetworkingOperationDidStartNotification' type='@'/>
<constant name='AFNetworkingOperationFailingURLRequestErrorKey' type='@'/>
<constant name='AFNetworkingOperationFailingURLResponseErrorKey' type='@'/>
<constant name='ApiDomain' type='@'/>
<constant name='HttpRequestDomain' type='@'/>
<constant name='RKLICURegexEnumerationOptionsErrorKey' type='@'/>
<constant name='RKLICURegexErrorCodeErrorKey' type='@'/>
<constant name='RKLICURegexErrorDomain' type='@'/>
<constant name='RKLICURegexErrorNameErrorKey' type='@'/>
<constant name='RKLICURegexException' type='@'/>
<constant name='RKLICURegexLineErrorKey' type='@'/>
<constant name='RKLICURegexOffsetErrorKey' type='@'/>
<constant name='RKLICURegexPostContextErrorKey' type='@'/>
<constant name='RKLICURegexPreContextErrorKey' type='@'/>
<constant name='RKLICURegexRegexErrorKey' type='@'/>
<constant name='RKLICURegexRegexOptionsErrorKey' type='@'/>
<constant name='RKLICURegexReplacedCountErrorKey' type='@'/>
<constant name='RKLICURegexReplacedStringErrorKey' type='@'/>
<constant name='RKLICURegexReplacementStringErrorKey' type='@'/>
<constant name='RKLICURegexSubjectRangeErrorKey' type='@'/>
<constant name='RKLICURegexSubjectStringErrorKey' type='@'/>
<constant name='kAFUploadStream3GSuggestedDelay' type='d'/>
<constant name='kAFUploadStream3GSuggestedPacketSize' type='I' type64='Q'/>
<constant name='kReachabilityChangedNotification' type='@'/>
<string_constant nsstring='true' name='ALPHA' value='ABCDEFGHIJKLMNOPQRSTUVWXYZ#'/>
<string_constant nsstring='true' name='ApiClient' value='http://m.tvie.com.cn/mcms/api2/client.php'/>
<string_constant nsstring='true' name='AppLink' value='http://www.tvie.com.cn'/>
<string_constant nsstring='true' name='AppModLive' value='live'/>
<string_constant nsstring='true' name='AppModNews' value='news'/>
<string_constant nsstring='true' name='AppModReport' value='report'/>
<string_constant nsstring='true' name='AppModVod' value='video'/>
<string_constant nsstring='true' name='CacheSchemeName' value='cache-image'/>
<string_constant nsstring='true' name='DBKeyConf' value='gconf'/>
<string_constant nsstring='true' name='DBKeyHotImg' value='hotImg'/>
<string_constant nsstring='true' name='DBKeyMovieLoadingImg' value='MovieLoadingImg'/>
<string_constant nsstring='true' name='DBKeySiteUrl' value='siteUrl'/>
<string_constant nsstring='true' name='DBKeyStatsApi' value='stats_api'/>
<string_constant nsstring='true' name='DBQFieldData' value='data'/>
<string_constant nsstring='true' name='DBQFieldData2' value='data2'/>
<string_constant nsstring='true' name='DBQFieldData3' value='data3'/>
<string_constant nsstring='true' name='DBQFieldData4' value='data4'/>
<string_constant nsstring='true' name='DBQFieldData5' value='data5'/>
<string_constant nsstring='true' name='DBQFieldData6' value='data6'/>
<string_constant nsstring='true' name='DBQFieldDomain' value='domain'/>
<string_constant nsstring='true' name='DBQFieldID' value='id'/>
<string_constant nsstring='true' name='DBQFieldQID' value='qid'/>
<string_constant nsstring='true' name='DBQFieldStatus' value='status'/>
<string_constant nsstring='true' name='DBQFieldUpTime' value='updatetime'/>
<string_constant nsstring='true' name='FULLDATEFORMAT' value='yyyy-MM-dd HH:mm:ss'/>
<string_constant nsstring='true' name='FULLDATEFORMAT_ZONE' value='yyyy-MM-dd HH:mm:ss Z'/>
<string_constant nsstring='true' name='G_APP_MAP_FILE' value='appmap.plist'/>
<string_constant nsstring='true' name='G_LOGIN_TIME' value='loginTime'/>
<string_constant nsstring='true' name='ImageScheme' value='image'/>
<string_constant nsstring='true' name='NotifyLogin' value='NotifyLogin'/>
<string_constant nsstring='true' name='NotifyLogout' value='NotifyLogout'/>
<string_constant nsstring='true' name='QQWeiboAppKey' value='801261473'/>
<string_constant nsstring='true' name='QQWeiboAppSecret' value='f65e9368eb3038f255eac21efce99980'/>
<string_constant name='REGEXKITLITE_VERSION_CSTRING' value='4.0'/>
<string_constant nsstring='true' name='REGEXKITLITE_VERSION_NSSTRING' value='4.0'/>
<string_constant nsstring='true' name='RenrenWeiboAppId' value='217106'/>
<string_constant nsstring='true' name='RenrenWeiboAppKey' value='2bfa00bfed014943acdfc26a5af1332c'/>
<string_constant nsstring='true' name='RenrenWeiboAppSecret' value='4571a4799f634b2798e9a5e310ae0710'/>
<string_constant nsstring='true' name='SinaWeiboAppKey' value='3462974483'/>
<string_constant nsstring='true' name='SinaWeiboAppSecret' value='a122cf4a45dc4e1e1fbd3da3d822ac49'/>
<string_constant nsstring='true' name='SinaWeiboCallback' value='http://m.tvie.com.cn/mcms/api2/mod/sns/callback.php'/>
<string_constant nsstring='true' name='UKEY' value='4Eg17LaBz60DSIEOA0'/>
<string_constant nsstring='true' name='URLParseKeyPage' value='URLParseKeyPage'/>
<string_constant nsstring='true' name='URLParseKeyParam' value='URLParseKeyParam'/>
<string_constant nsstring='true' name='URLParseKeyPath' value='URLParseKeyPath'/>
<string_constant nsstring='true' name='URLParseKeyString' value='URLParseKeyString'/>
<string_constant nsstring='true' name='URLParseKeyUrl' value='URLParseKeyUrl'/>
<string_constant nsstring='true' name='VideoScheme' value='video'/>
<string_constant nsstring='true' name='gConf' value='http://m.tvie.com.cn/mcms/api2/config.php'/>
<string_constant nsstring='true' name='gDateTimeFormat' value='EEE, d LLL, yyyy'/>
<string_constant nsstring='true' name='gImageCacheDir' value='cache_image'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='AlertViewTagAlert' value='0'/>
<enum name='AlertViewTagError' value='1'/>
<enum name='ApiRequestBatchNum' value='20'/>
<enum name='BCalloutAnnoViewTapTagBackground' value='1'/>
<enum name='BCalloutAnnoViewTapTagPhoto' value='2'/>
<enum name='BHttpRequestCachePolicyDontLoad' value='4'/>
<enum name='BHttpRequestCachePolicyFallbackToCacheIfLoadFails' value='8'/>
<enum name='BHttpRequestCachePolicyLoadIfNotCached' value='2'/>
<enum name='BHttpRequestCachePolicyNone' value='0'/>
<enum name='BHttpRequestCachePolicySaveCache' value='1'/>
<enum name='BImageTitleStyleBelow' value='1'/>
<enum name='BImageTitleStyleDefault' value='0'/>
<enum name='BToolBarStyleBlackTranslucent' value='1'/>
<enum name='BToolBarStyleBlue' value='2'/>
<enum name='BToolBarStyleDefault' value='0'/>
<enum name='BToolBarStyleTranslucent' value='3'/>
<enum name='CalloutMapAnnotationViewBottomShadowBufferSize' value='6.0f'/>
<enum name='CalloutMapAnnotationViewContentHeightBuffer' value='8.0f'/>
<enum name='CalloutMapAnnotationViewHeightAboveParent' value='2.0f'/>
<enum name='CustomButtonStyle1' value='1'/>
<enum name='CustomButtonStyle2' value='2'/>
<enum name='CustomButtonStyle3' value='3'/>
<enum name='CustomButtonStyle4' value='4'/>
<enum name='CustomButtonStyleDefault' value='0'/>
<enum name='DaySec' value='86400'/>
<enum name='DragLocationBottom' value='1'/>
<enum name='DragLocationTop' value='0'/>
<enum name='DragStateDragBeyond' value='2'/>
<enum name='DragStateDraging' value='1'/>
<enum name='DragStateLoadError' value='6'/>
<enum name='DragStateLoadFinished' value='5'/>
<enum name='DragStateLoading' value='4'/>
<enum name='DragStateRelease' value='3'/>
<enum name='DragStateUnInit' value='0'/>
<enum name='GTM_CONTAINERS_VALIDATION_FAILED_ASSERT' value='0'/>
<enum name='GTM_MACOS_SDK' value='1'/>
<enum name='GTM_SUPPORT_GC' value='1'/>
<enum name='HourSec' value='3600'/>
<enum name='HttpRequestMethodGET' value='0'/>
<enum name='HttpRequestMethodPOST' value='1'/>
<enum name='HttpRequestMethodPUT' value='2'/>
<enum name='IIViewDeckAllViewsPanning' value='6'/>
<enum name='IIViewDeckBottomSide' value='4'/>
<enum name='IIViewDeckCenterHiddenNotUserInteractive' value='1'/>
<enum name='IIViewDeckCenterHiddenNotUserInteractiveWithTapToClose' value='2'/>
<enum name='IIViewDeckCenterHiddenNotUserInteractiveWithTapToCloseBouncing' value='3'/>
<enum name='IIViewDeckCenterHiddenUserInteractive' value='0'/>
<enum name='IIViewDeckDelegateAndSubControllers' value='1'/>
<enum name='IIViewDeckDelegateOnly' value='0'/>
<enum name='IIViewDeckDelegatePanning' value='4'/>
<enum name='IIViewDeckFullViewPanning' value='1'/>
<enum name='IIViewDeckHorizontalOrientation' value='1'/>
<enum name='IIViewDeckLedgeSizeMode' value='0'/>
<enum name='IIViewDeckLeftSide' value='1'/>
<enum name='IIViewDeckNavigationBarOrOpenCenterPanning' value='5'/>
<enum name='IIViewDeckNavigationBarPanning' value='2'/>
<enum name='IIViewDeckNavigationControllerContained' value='0'/>
<enum name='IIViewDeckNavigationControllerIntegrated' value='1'/>
<enum name='IIViewDeckNoPanning' value='0'/>
<enum name='IIViewDeckPanningViewPanning' value='3'/>
<enum name='IIViewDeckRightSide' value='2'/>
<enum name='IIViewDeckTopSide' value='3'/>
<enum name='IIViewDeckVerticalOrientation' value='2'/>
<enum name='IIViewDeckViewSizeMode' value='1'/>
<enum name='JKParseOptionComments' value='1'/>
<enum name='JKParseOptionLooseUnicode' value='4'/>
<enum name='JKParseOptionNone' value='0'/>
<enum name='JKParseOptionPermitTextAfterValidJSON' value='8'/>
<enum name='JKParseOptionStrict' value='0'/>
<enum name='JKParseOptionUnicodeNewlines' value='2'/>
<enum name='JKParseOptionValidFlags' value='15'/>
<enum name='JKSerializeOptionEscapeForwardSlashes' value='16'/>
<enum name='JKSerializeOptionEscapeUnicode' value='2'/>
<enum name='JKSerializeOptionNone' value='0'/>
<enum name='JKSerializeOptionPretty' value='1'/>
<enum name='JKSerializeOptionValidFlags' value='19'/>
<enum name='JSONKIT_VERSION_MAJOR' value='1'/>
<enum name='JSONKIT_VERSION_MINOR' value='4'/>
<enum name='LabelVerticalAlignmentBottom' value='2'/>
<enum name='LabelVerticalAlignmentMiddle' value='1'/>
<enum name='LabelVerticalAlignmentTop' value='0'/>
<enum name='MinM3u8SliceDuration' value='10'/>
<enum name='NEEDS_DISPATCH_RETAIN_RELEASE' value='0'/>
<enum name='NotReachable' value='0'/>
<enum name='REGEXKITLITE_VERSION_MAJOR' value='4'/>
<enum name='REGEXKITLITE_VERSION_MINOR' value='0'/>
<enum name='RKLCaseless' value='2'/>
<enum name='RKLComments' value='4'/>
<enum name='RKLDotAll' value='32'/>
<enum name='RKLMultiline' value='8'/>
<enum name='RKLNoOptions' value='0'/>
<enum name='RKLRegexEnumerationCapturedStringsNotRequired' value='512'/>
<enum name='RKLRegexEnumerationFastCapturedStringsXXX' value='2048'/>
<enum name='RKLRegexEnumerationNoOptions' value='0'/>
<enum name='RKLRegexEnumerationReleaseStringReturnedByReplacementBlock' value='1024'/>
<enum name='RKLUnicodeWordBoundaries' value='256'/>
<enum name='RKL_BLOCKS' value='1'/>
<enum name='ReachableViaWWAN' value='1'/>
<enum name='ReachableViaWiFi' value='2'/>
<enum name='ResponseStatusCodeFail' value='2'/>
<enum name='ResponseStatusCodeSuccess' value='1'/>
<enum name='SeparatorLineStyleBottom' value='2'/>
<enum name='SeparatorLineStyleNone' value='0'/>
<enum name='SeparatorLineStyleTop' value='1'/>
<enum name='TableViewCellStyleDefault' value='0'/>
<enum name='TableViewCellStyleImage' value='1'/>
<enum name='XUIViewPannelStyle2' value='1'/>
<enum name='XUIViewPannelStyle3' value='2'/>
<enum name='XUIViewPannelStyleDefault' value='0'/>
<enum name='XUIViewToggleLocationBottom' value='2'/>
<enum name='XUIViewToggleLocationLeft' value='1'/>
<enum name='XUIViewToggleLocationRight' value='3'/>
<enum name='XUIViewToggleLocationTop' value='0'/>
<enum name='gAppIconHeight' value='80'/>
<enum name='gAppIconPadding' value='10'/>
<enum name='gAppIconTitleHeight' value='20'/>
<enum name='gAppIconWidth' value='80'/>
<enum name='gMVWindowHeight' value='180'/>
<enum name='gMVWindowWidth' value='240'/>
<enum name='gTablePicHeight' value='80'/>
<enum name='gTablePicWidth' value='80'/>
<enum name='gVideoExpireTime' value='3600'/>
<enum name='gWidgetCornerRad' value='6.0'/>
<enum name='kOpenUDIDErrorCompromised' value='2'/>
<enum name='kOpenUDIDErrorNone' value='0'/>
<enum name='kOpenUDIDErrorOptedOut' value='1'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<retval type='@'/>
</function>
<function name='CGSizeScale'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='f'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='IIViewDeckOffsetOrientationFromIIViewDeckSide'>
<arg type='L' type64='I'/>
<retval type='L' type64='I'/>
</function>
<function name='NSStringFromIIViewDeckSide'>
<arg type='L' type64='I'/>
<retval type='@'/>
</function>
<function name='createBarButtonItem'>
<arg type='@'/>
<arg type='@'/>
<arg type=':'/>
<retval type='^i'/>
</function>
<function name='createBarImageButtonItem'>
<arg type='@'/>
<arg type='@'/>
<arg type=':'/>
<retval type='^i'/>
</function>
<function name='createButton'>
<arg type='@'/>
<arg type='@'/>
<arg type=':'/>
<retval type='^i'/>
</function>
<function name='createButtonBg'>
<arg type='^i'/>
<arg type='^i'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval type='^i'/>
</function>
<function name='createButtonCircleBg'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='f'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='^i'/>
</function>
<function name='createColorizeImgButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<arg type='^i'/>
<retval type='^i'/>
</function>
<function name='createCustomButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='@'/>
<arg type='@'/>
<retval type='^i'/>
</function>
<function name='createGradient'>
<arg type='^{CGContext=}'/>
<arg type='@'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGGradient=}'/>
</function>
<function name='createGradientButtonBg'>
<arg type='@'/>
<arg type='^f' type64='^d'/>
<arg type='^i'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='f'/>
<retval type='^i'/>
</function>
<function name='createImageWithImage'>
<arg type='^i'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='^i'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='^i'/>
<arg type='i'/>
<arg type='i'/>
<retval type='^i'/>
</function>
<function name='createImgBarButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<arg type='@'/>
<retval type='^i'/>
</function>
<function name='createImgButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<retval type='^i'/>
</function>
<function name='createLabel'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<retval type='^i'/>
</function>
<function name='createPath'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='f'/>
</function>
<function name='createPlayButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<arg type=':'/>
<retval type='^i'/>
</function>
<function name='createRoundCornerButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<arg type='@'/>
<arg type=':'/>
<retval type='^i'/>
</function>
<function name='createStyleButton'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='@'/>
<arg type='i'/>
<retval type='^i'/>
</function>
<function name='getBundleFile'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='getBundleFileFromBundle'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='getChineseCalendar'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='getFilePath'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='getImageCacheDir'>
<retval type='@'/>
</function>
<function name='getTempFilePath'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='isURL'>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='loadViewFromNib'>
<arg type='#'/>
<arg type='@'/>
<retval type='^i'/>
</function>
<function name='nilToNull'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='nullToNil'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='pinyin'>
<arg type='S'/>
<retval type='c'/>
</function>
<function name='strIsNil'>
<arg type='@'/>
<retval type='B'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='registerHTTPOperationClass:'>
<retval type='B'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method class_method='true' selector='canProcessRequest:'>
<retval type='B'/>
</method>
<method selector='hasAcceptableContentType'>
<retval type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval type='B'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='AFImageRequestOperation'>
<method class_method='true' selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='@'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:success:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method class_method='true' selector='JSONRequestOperationWithRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method class_method='true' selector='propertyListRequestOperationWithRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B'/>
</method>
<method selector='isPaused'>
<retval type='B'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' type='B'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='B'/>
</arg>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='setCacheResponseBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
<method selector='setDownloadProgressBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='I' type64='Q'/>
<arg type='q'/>
<arg type='q'/>
<retval type='v'/>
</arg>
</method>
<method selector='setRedirectResponseBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg index='0' type='B'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='I' type64='Q'/>
<arg type='q'/>
<arg type='q'/>
<retval type='v'/>
</arg>
</method>
<method selector='shouldUseCredentialStorage'>
<retval type='B'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method class_method='true' selector='XMLDocumentRequestOperationWithRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='XMLParserRequestOperationWithRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='AsyncLoader'>
<method class_method='true' selector='feedback:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='loadData:param:cached:success:failure:'>
<arg index='2' type='B'/>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='4' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='loadDataString:param:cached:success:failure:'>
<arg index='2' type='B'/>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='4' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='post:param:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='BCalloutMapAnnotationView'>
<method selector='setPhotoCanFullScreen:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='BDropMenu'>
<method selector='isShow'>
<retval type='B'/>
</method>
</class>
<class name='BHttpClient'>
<method selector='dataRequestWithURLRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='jsonRequestWithURLRequest:success:failure:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='BHttpRequestOperation'>
<method selector='readFromCache'>
<retval type='B'/>
</method>
<method selector='setReceiveDataBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='BImageView'>
<method selector='showProgress:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='BMapLocation'>
<method class_method='true' selector='getLocationByIpSuccess:failure:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='search:callback:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='BMapPlace'>
<method class_method='true' selector='search:callback:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='BPhotoScrollView'>
<method selector='autoRemove'>
<retval type='B'/>
</method>
<method selector='canShowFullScreen'>
<retval type='B'/>
</method>
<method selector='setAutoRemove:'>
<arg index='0' type='B'/>
</method>
<method selector='setCanShowFullScreen:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='BQueue'>
<method class_method='true' selector='addDomain:queue:data:'>
<retval type='B'/>
</method>
<method class_method='true' variadic='true' selector='addDomain:queue:datas:'>
<retval type='B'/>
</method>
<method class_method='true' selector='addForQueue:withData:'>
<retval type='B'/>
</method>
<method class_method='true' selector='addForQueue:withKey:withData:'>
<retval type='B'/>
</method>
<method class_method='true' variadic='true' selector='addForQueue:withKey:withDatas:'>
<retval type='B'/>
</method>
<method class_method='true' selector='addQueue:data:'>
<retval type='B'/>
</method>
<method class_method='true' selector='removeByDomain:'>
<retval type='B'/>
</method>
<method class_method='true' selector='removeByDomain:queue:'>
<retval type='B'/>
</method>
<method class_method='true' selector='removeByField:value:'>
<retval type='B'/>
</method>
<method class_method='true' selector='removeById:'>
<retval type='B'/>
</method>
<method class_method='true' selector='removeByQueue:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setField:value:forField:value:'>
<retval type='B'/>
</method>
</class>
<class name='BResponse'>
<method selector='isSuccess'>
<retval type='B'/>
</method>
</class>
<class name='BUser'>
<method selector='isLogin'>
<retval type='B'/>
</method>
<method class_method='true' selector='loginWithUser:'>
<retval type='B'/>
</method>
<method class_method='true' selector='loginWithUserName:password:success:failure:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='registerWithUserName:email:password:success:failure:'>
<arg function_pointer='true' index='3' type='@?'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='4' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='Base64'>
<method class_method='true' selector='stringByWebSafeEncodingBytes:length:padded:'>
<arg index='2' type='B'/>
</method>
<method class_method='true' selector='stringByWebSafeEncodingData:padded:'>
<arg index='1' type='B'/>
</method>
<method class_method='true' selector='webSafeEncodeBytes:length:padded:'>
<arg index='2' type='B'/>
</method>
<method class_method='true' selector='webSafeEncodeData:padded:'>
<arg index='1' type='B'/>
</method>
</class>
<class name='BaseViewController'>
<method selector='canPullBack'>
<retval type='B'/>
</method>
<method selector='setCanPullBack:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='DBCache'>
<method class_method='true' selector='removeForKey:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setDomain:key:value:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setDouble:forKey:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setFloat:forKey:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setInt:forKey:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setValue:forKey:'>
<retval type='B'/>
</method>
</class>
<class name='Dao'>
<method class_method='true' selector='close:'>
<retval type='B'/>
</method>
<method class_method='true' selector='executeSql:params:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setup'>
<retval type='B'/>
</method>
</class>
<class name='FMDatabase'>
<method selector='beginDeferredTransaction'>
<retval type='B'/>
</method>
<method selector='beginTransaction'>
<retval type='B'/>
</method>
<method variadic='true' selector='boolForQuery:'>
<retval type='B'/>
</method>
<method selector='checkedOut'>
<retval type='B'/>
</method>
<method selector='close'>
<retval type='B'/>
</method>
<method selector='columnExists:columnName:'>
<retval type='B'/>
</method>
<method selector='columnExists:inTableWithName:'>
<retval type='B'/>
</method>
<method selector='commit'>
<retval type='B'/>
</method>
<method selector='crashOnErrors'>
<retval type='B'/>
</method>
<method variadic='true' selector='executeUpdate:'>
<retval type='B'/>
</method>
<method selector='executeUpdate:withArgumentsInArray:'>
<retval type='B'/>
</method>
<method selector='executeUpdate:withParameterDictionary:'>
<retval type='B'/>
</method>
<method variadic='true' selector='executeUpdateWithFormat:'>
<retval type='B'/>
</method>
<method selector='goodConnection'>
<retval type='B'/>
</method>
<method selector='hadError'>
<retval type='B'/>
</method>
<method selector='hasDateFormatter'>
<retval type='B'/>
</method>
<method selector='hasOpenResultSets'>
<retval type='B'/>
</method>
<method selector='inSavePoint:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='inTransaction'>
<retval type='B'/>
</method>
<method class_method='true' selector='isSQLiteThreadSafe'>
<retval type='B'/>
</method>
<method selector='logsErrors'>
<retval type='B'/>
</method>
<method selector='makeFunctionNamed:maximumArguments:withBlock:'>
<arg function_pointer='true' index='2' type='@?'>
<arg type='^{sqlite3_context=}'/>
<arg type='i'/>
<arg type='^^{Mem}'/>
<retval type='v'/>
</arg>
</method>
<method selector='open'>
<retval type='B'/>
</method>
<method selector='openWithFlags:'>
<retval type='B'/>
</method>
<method selector='rekey:'>
<retval type='B'/>
</method>
<method selector='rekeyWithData:'>
<retval type='B'/>
</method>
<method selector='releaseSavePointWithName:error:'>
<retval type='B'/>
</method>
<method selector='rollback'>
<retval type='B'/>
</method>
<method selector='rollbackToSavePointWithName:error:'>
<retval type='B'/>
</method>
<method selector='setCheckedOut:'>
<arg index='0' type='B'/>
</method>
<method selector='setCrashOnErrors:'>
<arg index='0' type='B'/>
</method>
<method selector='setKey:'>
<retval type='B'/>
</method>
<method selector='setKeyWithData:'>
<retval type='B'/>
</method>
<method selector='setLogsErrors:'>
<arg index='0' type='B'/>
</method>
<method selector='setShouldCacheStatements:'>
<arg index='0' type='B'/>
</method>
<method selector='setTraceExecution:'>
<arg index='0' type='B'/>
</method>
<method selector='shouldCacheStatements'>
<retval type='B'/>
</method>
<method selector='startSavePointWithName:error:'>
<retval type='B'/>
</method>
<method selector='tableExists:'>
<retval type='B'/>
</method>
<method selector='traceExecution'>
<retval type='B'/>
</method>
<method variadic='true' selector='update:withErrorAndBindings:'>
<retval type='B'/>
</method>
<method selector='validateSQL:error:'>
<retval type='B'/>
</method>
</class>
<class name='FMDatabasePool'>
<method selector='inDatabase:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='inDeferredTransaction:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='inSavePoint:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='inTransaction:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='FMDatabaseQueue'>
<method selector='inDatabase:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='inDeferredTransaction:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='inSavePoint:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='inTransaction:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='FMResultSet'>
<method selector='boolForColumn:'>
<retval type='B'/>
</method>
<method selector='boolForColumnIndex:'>
<retval type='B'/>
</method>
<method selector='columnIndexIsNull:'>
<retval type='B'/>
</method>
<method selector='columnIsNull:'>
<retval type='B'/>
</method>
<method selector='hasAnotherRow'>
<retval type='B'/>
</method>
<method selector='next'>
<retval type='B'/>
</method>
</class>
<class name='IISideController'>
<method selector='shrinkSideAnimated:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='IIViewDeckController'>
<method selector='automaticallyUpdateTabBarItems'>
<retval type='B'/>
</method>
<method selector='canPanOverViewsOfClass:'>
<retval type='B'/>
</method>
<method selector='canRightViewPushViewControllerOverCenterController'>
<retval type='B'/>
</method>
<method selector='closeBottomView'>
<retval type='B'/>
</method>
<method selector='closeBottomViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='closeBottomViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeBottomViewAnimated:duration:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeBottomViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeBottomViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeLeftView'>
<retval type='B'/>
</method>
<method selector='closeLeftViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='closeLeftViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeLeftViewAnimated:duration:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeLeftViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeLeftViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeOpenView'>
<retval type='B'/>
</method>
<method selector='closeOpenViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='closeOpenViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeOpenViewAnimated:duration:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeOpenViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeOpenViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeRightView'>
<retval type='B'/>
</method>
<method selector='closeRightViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='closeRightViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeRightViewAnimated:duration:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeRightViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeRightViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeTopView'>
<retval type='B'/>
</method>
<method selector='closeTopViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='closeTopViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeTopViewAnimated:duration:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='2' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeTopViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='closeTopViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='isAnySideOpen'>
<retval type='B'/>
</method>
<method selector='isElastic'>
<retval type='B'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='isSideClosed:'>
<retval type='B'/>
</method>
<method selector='isSideOpen:'>
<retval type='B'/>
</method>
<method selector='openBottomView'>
<retval type='B'/>
</method>
<method selector='openBottomViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='openBottomViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openBottomViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openBottomViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openLeftView'>
<retval type='B'/>
</method>
<method selector='openLeftViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='openLeftViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openLeftViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openLeftViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openRightView'>
<retval type='B'/>
</method>
<method selector='openRightViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='openRightViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openRightViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openRightViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openTopView'>
<retval type='B'/>
</method>
<method selector='openTopViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='openTopViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openTopViewBouncing:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='openTopViewBouncing:completion:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='panningCancelsTouchesInView'>
<retval type='B'/>
</method>
<method selector='previewBounceView:'>
<retval type='B'/>
</method>
<method selector='previewBounceView:toDistance:duration:callDelegate:completion:'>
<arg index='3' type='B'/>
<arg function_pointer='true' index='4' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='previewBounceView:toDistance:duration:numberOfBounces:dampingFactor:callDelegate:completion:'>
<arg index='5' type='B'/>
<arg function_pointer='true' index='6' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='previewBounceView:withCompletion:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='resizesCenterView'>
<retval type='B'/>
</method>
<method selector='setAutomaticallyUpdateTabBarItems:'>
<arg index='0' type='B'/>
</method>
<method selector='setBottomSize:completion:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setElastic:'>
<arg index='0' type='B'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B'/>
</method>
<method selector='setLeftSize:completion:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setMaxSize:completion:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setPanningCancelsTouchesInView:'>
<arg index='0' type='B'/>
</method>
<method selector='setResizesCenterView:'>
<arg index='0' type='B'/>
</method>
<method selector='setRightSize:completion:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setShadowEnabled:'>
<arg index='0' type='B'/>
</method>
<method selector='setTopSize:completion:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='shadowEnabled'>
<retval type='B'/>
</method>
<method selector='toggleBottomView'>
<retval type='B'/>
</method>
<method selector='toggleBottomViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='toggleBottomViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='toggleLeftView'>
<retval type='B'/>
</method>
<method selector='toggleLeftViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='toggleLeftViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='toggleOpenView'>
<retval type='B'/>
</method>
<method selector='toggleOpenViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='toggleOpenViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='toggleRightView'>
<retval type='B'/>
</method>
<method selector='toggleRightViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='toggleRightViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='toggleTopView'>
<retval type='B'/>
</method>
<method selector='toggleTopViewAnimated:'>
<arg index='0' type='B'/>
<retval type='B'/>
</method>
<method selector='toggleTopViewAnimated:completion:'>
<arg index='0' type='B'/>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
</class>
<class name='IIWrapController'>
<method selector='setOnViewDidAppear:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setOnViewDidDisappear:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setOnViewDidLoad:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='setOnViewWillAppear:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setOnViewWillDisappear:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<arg type='B'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='MKLocationManager'>
<method selector='chinaShiftEnabled'>
<retval type='B'/>
</method>
</class>
<class name='NSArray'>
<method selector='JSONDataWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
<method selector='JSONStringWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
<method selector='containsStringIgnoreCase:'>
<retval type='B'/>
</method>
<method selector='containsStringIgnoreCase:forObjectKey:'>
<retval type='B'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='JSONDataWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
<method selector='JSONStringWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
</class>
<class name='NSMutableString'>
<method selector='replaceOccurrencesOfRegex:options:inRange:error:enumerationOptions:usingBlock:'>
<arg function_pointer='true' index='5' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='@'/>
</arg>
</method>
<method selector='replaceOccurrencesOfRegex:usingBlock:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='@'/>
</arg>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileURL:name:error:'>
<retval type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<retval type='B'/>
</method>
<method selector='databasePool:shouldAddDatabaseToPool:'>
<retval type='B'/>
</method>
<method selector='viewDeckController:didChangeOffset:orientation:panning:'>
<arg index='3' type='B'/>
</method>
<method selector='viewDeckController:didCloseViewSide:animated:'>
<arg index='2' type='B'/>
</method>
<method selector='viewDeckController:didOpenViewSide:animated:'>
<arg index='2' type='B'/>
</method>
<method selector='viewDeckController:didPreviewBounceViewSide:animated:'>
<arg index='2' type='B'/>
</method>
<method selector='viewDeckController:didShowCenterViewFromSide:animated:'>
<arg index='2' type='B'/>
</method>
<method selector='viewDeckController:shouldBeginPanOverView:'>
<retval type='B'/>
</method>
<method selector='viewDeckController:shouldCloseViewSide:animated:'>
<arg index='2' type='B'/>
<retval type='B'/>
</method>
<method selector='viewDeckController:shouldOpenViewSide:'>
<retval type='B'/>
</method>
<method selector='viewDeckController:shouldPan:'>
<retval type='B'/>
</method>
<method selector='viewDeckController:shouldPreviewBounceViewSide:'>
<retval type='B'/>
</method>
<method selector='viewDeckController:willCloseViewSide:animated:'>
<arg index='2' type='B'/>
</method>
<method selector='viewDeckController:willOpenViewSide:animated:'>
<arg index='2' type='B'/>
</method>
<method selector='viewDeckController:willPreviewBounceViewSide:animated:'>
<arg index='2' type='B'/>
</method>
</class>
<class name='NSString'>
<method selector='JSONDataWithOptions:includeQuotes:error:'>
<arg index='1' type='B'/>
</method>
<method selector='JSONStringWithOptions:includeQuotes:error:'>
<arg index='1' type='B'/>
</method>
<method variadic='true' sentinel='0' selector='arrayOfDictionariesByMatchingRegex:options:range:error:withKeysAndCaptures:'/>
<method variadic='true' sentinel='0' selector='arrayOfDictionariesByMatchingRegex:range:withKeysAndCaptures:'/>
<method variadic='true' sentinel='0' selector='arrayOfDictionariesByMatchingRegex:withKeysAndCaptures:'/>
<method selector='deleteFile'>
<retval type='B'/>
</method>
<method variadic='true' sentinel='0' selector='dictionaryByMatchingRegex:options:range:error:withKeysAndCaptures:'/>
<method variadic='true' sentinel='0' selector='dictionaryByMatchingRegex:range:withKeysAndCaptures:'/>
<method variadic='true' sentinel='0' selector='dictionaryByMatchingRegex:withKeysAndCaptures:'/>
<method selector='enumerateStringsMatchedByRegex:options:inRange:error:enumerationOptions:usingBlock:'>
<arg function_pointer='true' index='5' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='enumerateStringsMatchedByRegex:usingBlock:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='enumerateStringsSeparatedByRegex:options:inRange:error:enumerationOptions:usingBlock:'>
<arg function_pointer='true' index='5' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='enumerateStringsSeparatedByRegex:usingBlock:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='isEmail'>
<retval type='B'/>
</method>
<method selector='isMatchedByRegex:'>
<retval type='B'/>
</method>
<method selector='isMatchedByRegex:inRange:'>
<retval type='B'/>
</method>
<method selector='isMatchedByRegex:options:inRange:error:'>
<retval type='B'/>
</method>
<method selector='isRegexValid'>
<retval type='B'/>
</method>
<method selector='isRegexValidWithOptions:error:'>
<retval type='B'/>
</method>
<method selector='isURL'>
<retval type='B'/>
</method>
<method selector='renameToPath:'>
<retval type='B'/>
</method>
<method selector='stringByReplacingOccurrencesOfRegex:options:inRange:error:enumerationOptions:usingBlock:'>
<arg function_pointer='true' index='5' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='@'/>
</arg>
</method>
<method selector='stringByReplacingOccurrencesOfRegex:usingBlock:'>
<arg function_pointer='true' index='1' type='@?'>
<arg type='i' type64='q'/>
<arg type='^@'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='@'/>
</arg>
</method>
</class>
<class name='NSURL'>
<method class_method='true' selector='isCacheImageURL:'>
<retval type='B'/>
</method>
<method selector='isImageURL'>
<retval type='B'/>
</method>
<method selector='isVideoURL'>
<retval type='B'/>
</method>
</class>
<class name='NetChecker'>
<method class_method='true' selector='isAvailable'>
<retval type='B'/>
</method>
</class>
<class name='OpenUDID'>
<method class_method='true' selector='setOptOut:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='Reachability'>
<method selector='connectionRequired'>
<retval type='B'/>
</method>
<method selector='isConnectionOnDemand'>
<retval type='B'/>
</method>
<method selector='isConnectionRequired'>
<retval type='B'/>
</method>
<method selector='isInterventionRequired'>
<retval type='B'/>
</method>
<method selector='isReachable'>
<retval type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval type='B'/>
</method>
<method selector='reachableOnWWAN'>
<retval type='B'/>
</method>
<method selector='setReachableBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='setReachableOnWWAN:'>
<arg index='0' type='B'/>
</method>
<method selector='setUnreachableBlock:'>
<arg function_pointer='true' index='0' type='@?'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='startNotifier'>
<retval type='B'/>
</method>
</class>
<class name='SlidingRootViewController'>
<method selector='popViewControllerAnimated:'>
<arg index='0' type='B'/>
</method>
<method selector='pushViewController:animated:'>
<arg index='1' type='B'/>
</method>
</class>
<class name='SlidingViewController'>
<method selector='popViewControllerAnimated:'>
<arg index='0' type='B'/>
</method>
<method selector='pullBack:'>
<arg index='0' type='B'/>
</method>
<method selector='pushViewController:animated:'>
<arg index='1' type='B'/>
</method>
<method selector='pushViewController:canPullBack:animated:'>
<arg index='1' type='B'/>
<arg index='2' type='B'/>
</method>
</class>
<class name='TableCell'>
<method selector='setImageViewHidden:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='TableView'>
<method selector='isSupportLoadMore'>
<retval type='B'/>
</method>
<method selector='isSupportUpdate'>
<retval type='B'/>
</method>
<method selector='setSupportLoadMore:'>
<arg index='0' type='B'/>
</method>
<method selector='setSupportUpdate:'>
<arg index='0' type='B'/>
</method>
<method selector='setUseCache:'>
<arg index='0' type='B'/>
</method>
<method selector='useCache'>
<retval type='B'/>
</method>
</class>
<class name='Utils'>
<method class_method='true' selector='createFileIfNotExist:'>
<retval type='B'/>
</method>
<method class_method='true' selector='createNewFileAtPath:'>
<retval type='B'/>
</method>
<method class_method='true' selector='moveFile:toFile:'>
<retval type='B'/>
</method>
</class>
<class name='XScrollView'>
<method selector='isSupportLoadMore'>
<retval type='B'/>
</method>
<method selector='isSupportUpdate'>
<retval type='B'/>
</method>
<method selector='setSupportLoadMore:'>
<arg index='0' type='B'/>
</method>
<method selector='setSupportUpdate:'>
<arg index='0' type='B'/>
</method>
</class>
<class name='XUIView'>
<method class_method='true' selector='toggleWithView:withView2:withLocation:animated:'>
<arg index='3' type='B'/>
</method>
</class>
<class name='XUIViewController'>
<method selector='shouldPopViewController:'>
<retval type='B'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='appendPartWithFileData:name:fileName:mimeType:'/>
<method type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32' selector='appendPartWithFileURL:name:error:'/>
<method type='B28@0:4@8@12@16@20^@24' type64='B56@0:8@16@24@32@40^@48' selector='appendPartWithFileURL:name:fileName:mimeType:error:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='appendPartWithFormData:name:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='appendPartWithHeaders:body:'/>
<method type='v32@0:4@8@12@16Q20@28' type64='v56@0:8@16@24@32Q40@48' selector='appendPartWithInputStream:name:fileName:length:mimeType:'/>
<method type='v20@0:4I8d12' type64='v32@0:8Q16d24' selector='throttleBandwidthWithPacketSize:delay:'/>
</informal_protocol>
<informal_protocol name='BDropMenuDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='dropMenu:didSelectItem:'/>
</informal_protocol>
<informal_protocol name='FMDatabasePoolDelegate'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='databasePool:shouldAddDatabaseToPool:'/>
</informal_protocol>
<informal_protocol name='HTabBarViewDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tabBar:didSelectItem:'/>
</informal_protocol>
<informal_protocol name='IIViewDeckControllerDelegate'>
<method type='v32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16' type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' selector='viewDeckController:applyShadow:withBounds:'/>
<method type='f20@0:4@8f12L16' type64='d36@0:8@16d24I32' selector='viewDeckController:changesLedge:forSide:'/>
<method type='v20@0:4@8L12@16' type64='v36@0:8@16I24@28' selector='viewDeckController:didBounceViewSide:closingController:'/>
<method type='v20@0:4@8L12@16' type64='v36@0:8@16I24@28' selector='viewDeckController:didBounceViewSide:openingController:'/>
<method type='v24@0:4@8f12L16B20' type64='v40@0:8@16d24I32B36' selector='viewDeckController:didChangeOffset:orientation:panning:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:didCloseViewSide:animated:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:didOpenViewSide:animated:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:didPreviewBounceViewSide:animated:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:didShowCenterViewFromSide:animated:'/>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='viewDeckController:shouldBeginPanOverView:'/>
<method type='B20@0:4@8L12B16' type64='B32@0:8@16I24B28' selector='viewDeckController:shouldCloseViewSide:animated:'/>
<method type='B16@0:4@8L12' type64='B28@0:8@16I24' selector='viewDeckController:shouldOpenViewSide:'/>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='viewDeckController:shouldPan:'/>
<method type='B16@0:4@8L12' type64='B28@0:8@16I24' selector='viewDeckController:shouldPreviewBounceViewSide:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:willCloseViewSide:animated:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:willOpenViewSide:animated:'/>
<method type='v20@0:4@8L12B16' type64='v32@0:8@16I24B28' selector='viewDeckController:willPreviewBounceViewSide:animated:'/>
</informal_protocol>
<informal_protocol name='SlidingViewControllerDelegate'>
<method type='v20@0:4@8{CGPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24' selector='slidingViewController:didSlideOffset:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='slidingViewController:didSlideToController:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='slidingViewController:willSlideToController:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='slidingViewControllerDidBecomeEmpty:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='slidingViewControllerWillBecomeEmpty:'/>
</informal_protocol>
<informal_protocol name='TableViewDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='loadMore:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='tableView:cacheImagePath:forIndexPath:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='tableView:didLoadedImageAtPath:forIndexPath:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='update:'/>
</informal_protocol>
<informal_protocol name='VTabBarViewDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='tabBar:didSelectItem:'/>
</informal_protocol>
<informal_protocol name='XScrollViewDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='loadMore:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='update:'/>
</informal_protocol>
<informal_protocol name='XUIImageViewDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='imageView:didChangeImage:'/>
</informal_protocol>
</signatures>
